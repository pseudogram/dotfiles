#!/bin/bash

if [[ -z $DOTFILES ]]; then
    DOTFILES=$HOME/dotfiles
fi

# import utils
source $DOTFILES/macOs/utils

function get_mode() {
    if [[ -z $MODE ]]; then
        echo "What install mode would you like to use (mac/ubuntu)?"
        read MODE
    fi
}

function mac_packages() {
    if [[ -z $NO_APPS ]]; then
        echo_warn "Set NO_APPS to skip brew install"
        DOTFILES=$DOTFILES $DOTFILES/macOs/bootstrap
    else
        echo "Skipping install of brew packages"
    fi
}

function ubuntu_packages() {
    if [[ -z $PACKAGES ]]; then
        # stow, neovim, bat, xz, openssl, fd, fzf, gdbm, gh, git-delta, grex,
        # md5sha1sum, pkg-config, pyenv, tag, tcl-tk, tealdeer, tmux, tree,
        # watchman, yarn, docker, jq, direnv, ripgrep, readline, pyenv,
        # postgresql@14
        PACKAGES="stow,neovim,bat,fd-find,tealdeer,tree,jq,direnv,"
        PACKAGES+="ripgrep,git-delta,rbenv,ruby-build"
    fi
}

function stow() {
    if [[ -z $STOW_FOLDERS && $MODE = "mac" ]]; then
        # ohmyzsh must be installed before zsh
        STOW_FOLDERS="bin,git,nvim,tmux,ohmyzsh,zsh,personal"
    elif [[ -z $STOW_FOLDERS && $MODE = "ubuntu" ]]; then
        STOW_FOLDERS="bin,git,nvim,tmux,ohmyzsh,zsh"
    fi

    STOW_FOLDERS=$STOW_FOLDERS DOTFILES=$DOTFILES $DOTFILES/stow
}

function fzf_install() {
    if [[ $(command -v fzf) ]] ; then
        return
    fi
    $DOTFILES/fzf/install --all
}

function link_fzf() {
    ln -s /root/dotfiles/fzf/bin/fzf /bin/fzf
}

function prepare_neovim() {
    nvim --headless "+Lazy! install" +qa
}

function mac_install() {
    if [[ $MODE != 'mac' ]]; then
        return
    fi
    echo "Installing for Mac"
    mac_packages
    stow
    fzf_install
    prepare_neovim
}

function set_mode() {
    # if [ ! -z "${MODE}" ]; then
    if uname -a|grep -i darwin  &>/dev/null; then
        MODE=mac
    else
        MODE=ubuntu
    fi
}

echo_ok "Install starting. You may be asked for your password (for sudo)."
if [[ -z $DOTFILES ]]; then
    DOTFILES=$HOME/dotfiles
fi
set_mode

if [[ $MODE == 'mac' ]]; then
    echo "Installing for MacOS"
    mac_install
elif [[ $MODE == 'ubuntu' ]]; then
    echo "Installing for Ubuntu"
    echo_error "Ubuntu installer not set"
else
    echo_error "No installer set for MODE = ${MODE} "
fi

echo_ok "Bootstrapping complete"
